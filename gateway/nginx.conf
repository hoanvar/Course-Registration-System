events {
    worker_connections 1024;
}

http {
    map_hash_bucket_size 256;
    map_hash_max_size 4096;

    upstream registration-service {
        server registration-service:4000;
        keepalive 32;
    }

    upstream student-service {
        server student-service:4001;
        keepalive 32;
    }

    upstream course-service {
        server course-service:4002;
        keepalive 32;
    }

    upstream auth-service {
        server auth-service:4004;
        keepalive 32;
    }

    # Timeout settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Buffer settings
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # CORS configuration
    map $http_origin $cors_origin {
        default "http://localhost:8081";
    }

    server {
        listen 80;

        # Global CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle OPTIONS method
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
        }

        # Auth Service Routes - Không cần xác thực
        location /api/auth/ {
            proxy_pass http://auth-service/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }

        # Endpoint xác thực token
        location = /api/auth/validate {
            internal;
            proxy_pass http://auth-service/auth/validate;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
        }

        # Registration Service Routes
        location /api/registration/ {
            auth_request /api/auth/validate;
            auth_request_set $auth_status $upstream_status;

            proxy_pass http://registration-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            error_page 401 = @error401;
        }

        # Student Service Routes
        location /api/students/ {
            auth_request /api/auth/validate;
            auth_request_set $auth_status $upstream_status;

            proxy_pass http://student-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            error_page 401 = @error401;
        }

        # Course Service Routes
        location /api/courses/ {
            auth_request /api/auth/validate;
            auth_request_set $auth_status $upstream_status;

            proxy_pass http://course-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            error_page 401 = @error401;
        }

        # Error handling
        location @error401 {
            return 401 '{"error":"Unauthorized","message":"Invalid or expired token"}';
            add_header Content-Type application/json;
        }
    }
}