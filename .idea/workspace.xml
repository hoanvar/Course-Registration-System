<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ca9b1908-dca3-4729-9019-057a2b91eea5" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2025-05-10T191023.400.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2025-05-10T192527.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2025-05-10T192541.400.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/2025-05-10T194744.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/.gitattributes" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/.gitattributes" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/.mvn/wrapper/maven-wrapper.properties" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/.mvn/wrapper/maven-wrapper.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/mvnw" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/mvnw" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/mvnw.cmd" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/mvnw.cmd" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/StudentServiceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/StudentServiceApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/controller/StudentController.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/controller/StudentController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/dto/StudentRequestDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/dto/StudentRequestDTO.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/dto/StudentResponseDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/dto/StudentResponseDTO.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/dto/validators/CreateStudentValidationGroup.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/dto/validators/CreateStudentValidationGroup.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/exception/EmailAlreadyExistsException.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/exception/EmailAlreadyExistsException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/exception/GlobalExceptionHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/exception/GlobalExceptionHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/exception/StudentNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/exception/StudentNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/mapper/StudentMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/mapper/StudentMapper.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/model/Student.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/model/Student.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/repository/StudentRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/repository/StudentRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/java/com/example/studentservice/service/StudentService.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/java/com/example/studentservice/service/StudentService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/main/resources/data.sql" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/main/resources/data.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/student-service/src/test/java/com/example/studentservice/StudentServiceApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/services/student-service/src/test/java/com/example/studentservice/StudentServiceApplicationTests.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Exception" />
        <option value="Class" />
        <option value="Interface" />
        <option value="HTTP Request" />
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="vtlan" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2wtSyyDDa6dp6kd39xSbMaWPV64" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.StudentServiceApplication.executor": "Debug",
    "Docker.student-service-database.executor": "Run",
    "Docker.student-service-db.executor": "Run",
    "Docker.student-service.executor": "Run",
    "Docker.student-service/Dockerfile.executor": "Run",
    "HTTP Request.create-student | Create a new student.executor": "Run",
    "HTTP Request.create-student | GET request to example server.executor": "Run",
    "HTTP Request.delete-student | Delete an entity.executor": "Run",
    "HTTP Request.get-students | GET request to get all students.executor": "Run",
    "HTTP Request.update-student | Update student.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "Spring Boot.StudentServiceApplication.executor": "Run",
    "git-widget-placeholder": "vtlan",
    "junie.onboarding.icon.badge.shown": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "D:/PTIT/SQA/final-project/final-project/source code/backend",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql",
      "h2",
      "mysql",
      "mysql_aurora"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\PTIT\Microservices\mid-project-022382478\services" />
      <recent name="D:\PTIT\Microservices\mid-project-022382478" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.student-service">
    <configuration name="create-student | Create a new student" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api-requests/student-service/create-student.http" executionIdentifier="Create a new student" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="delete-student | Delete an entity" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api-requests/student-service/delete-student.http" executionIdentifier="Delete an entity" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="get-students | GET request to get all students" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api-requests/student-service/get-students.http" executionIdentifier="GET request to get all students" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="update-student | Update student" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/api-requests/student-service/update-student.http" executionIdentifier="Update student" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="StudentServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
      <module name="student-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.studentservice.StudentServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="student-service-db" type="docker-deploy" factoryName="docker-image" server-name="Docker">
      <deployment type="docker-image">
        <settings>
          <option name="imageTag" value="postgres:latest" />
          <option name="containerName" value="student-service-db" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="POSTGRES_DB" />
                <option name="value" value="db" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="POSTGRES_PASSWORD" />
                <option name="value" value="password" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="POSTGRES_USER" />
                <option name="value" value="admin_user" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="5432" />
                <option name="hostPort" value="5000" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="commandLineOptions" value="--network internal" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="student-service" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="student-service:latest" />
          <option name="containerName" value="student-service" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="SPRING_DATASOURCE_PASSWORD" />
                <option name="value" value="password" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="SPRING_DATASOURCE_URL" />
                <option name="value" value="jdbc:postgresql://student-service-db:5432/db" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="SPRING_DATASOURCE_USERNAME" />
                <option name="value" value="admin_user" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="SPRING_JPA_HIBERNATE_DDL_AUTO" />
                <option name="value" value="update" />
              </DockerEnvVarImpl>
              <DockerEnvVarImpl>
                <option name="name" value="SPRING_SQL_INiT_MODE" />
                <option name="value" value="always" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="4000" />
                <option name="hostPort" value="4000" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="commandLineOptions" value="--network internal" />
          <option name="sourceFilePath" value="services/student-service/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.student-service" />
      <item itemvalue="Docker.student-service-db" />
      <item itemvalue="HTTP Request.create-student | Create a new student" />
      <item itemvalue="HTTP Request.delete-student | Delete an entity" />
      <item itemvalue="HTTP Request.get-students | GET request to get all students" />
      <item itemvalue="HTTP Request.update-student | Update student" />
      <item itemvalue="Spring Boot.StudentServiceApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.update-student | Update student" />
        <item itemvalue="HTTP Request.get-students | GET request to get all students" />
        <item itemvalue="HTTP Request.create-student | Create a new student" />
        <item itemvalue="HTTP Request.delete-student | Delete an entity" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.25410.129" />
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-IU-251.25410.129" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ca9b1908-dca3-4729-9019-057a2b91eea5" name="Changes" comment="" />
      <created>1746859636356</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1746859636356</updated>
      <workItem from="1746866844245" duration="15092000" />
      <workItem from="1747021112784" duration="14722000" />
      <workItem from="1747041189346" duration="6041000" />
      <workItem from="1747050219211" duration="2180000" />
      <workItem from="1747052978060" duration="1791000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="ai.zencoder.plugin.chat.state">
    <option name="activeChatId" value="995adb65-c5c5-4af7-b561-73e753e77c36" />
  </component>
  <component name="ai.zencoder.plugin.rag.settings">
    <option name="desiredChunkSizeBytes" value="4194304" />
    <option name="forbiddenExtensions">
      <set>
        <option value=".log,.lock,.svg" />
      </set>
    </option>
    <option name="pollingIntervalMs" value="60000" />
    <option name="repoIndexingIntervalMs" value="300000" />
  </component>
  <component name="ai.zencoder.plugin.rag.state">
    <option name="indexedFilesMap">
      <map>
        <entry key="$PROJECT_DIR$/services/service-a/readme.md" value="1746865102952" />
      </map>
    </option>
    <option name="lastCommitHash" value="28ee19c527e80e9bc67f20d90d19ffbd9fac48a8" />
    <option name="lastIndexTimestamp" value="1746865102952" />
    <option name="repoAccumulatedChanges" value="1" />
    <option name="repoTotalFiles" value="11" />
    <option name="repositoryId" value="061dd3d6-7313-4348-9726-74784527e88f" />
    <option name="state" value="FULLY_INDEXED" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/mid_project_022382478$StudentServiceApplication.ic" NAME="StudentServiceApplication Coverage Results" MODIFIED="1747043490945" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
  </component>
</project>