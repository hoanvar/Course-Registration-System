openapi: 3.0.0
info:
  title: Auth Service API
  version: 1.0.0
  description: API documentation for Authentication Service
  contact:
    name: Auth Service Team
    email: auth-service@example.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:4004
    description: Development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login to get JWT token
      description: Authenticate user and return JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                        example: admin
                      role:
                        type: string
                        example: admin
        '401':
          description: Invalid credentials
        '500':
          description: Internal server error
  /auth/validate:
    get:
      tags:
        - Authentication
      summary: Validate JWT token
      description: Verify if the provided JWT token is valid
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    type: object
                    properties:
                      sub:
                        type: string
                        example: "1234567890"
                      name:
                        type: string
                        example: admin
                      admin:
                        type: boolean
                        example: true
        '401':
          description: Invalid or missing token 